imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@MyAppUserBundle/Resources/config/services.yml" }
    - { resource: "@EspritGameBundle/Resources/config/services.yml" }
# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/../var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport:  '%mailer_transport%'
    host:       '%mailer_host%'
    username:   '%mailer_user%'
    password:   '%mailer_password%'
    spool: { type: memory }

fos_user:
   db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
   firewall_name: main
   user_class: MyApp\UserBundle\Entity\User
   from_email:
           address: haythem.arfaoui@esprit.tn
           sender_name: haythem

services:
    fos_user.doctrine_registry:
        alias: doctrine
    redirect.after.login:
        class: MyApp\UserBundle\Redirection\AfterLoginRedirection
        arguments: ['@router','@security.authorization_checker']

#pagination
knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template

nomaya_social:
    buttons:
        facebook:
            url:            "https://developers.facebook.com/docs/plugins/"
            locale:         "fr_FR"
            send:           false
            width:          300
            showFaces:      false
            layout:         "button_count"
        twitter:
            url:            null
            locale:         "fr"
            message:        "Je vous presente les dernier jeu de TGS"
            text:           "Tweet"
            via:            "L'Equipe tgs.tn"
            tag:            "slimux"
        googleplus:
            url:            "https://apis.google.com/js/platform.js"
            locale :        "fr"
            size :          "medium"
            annotation :    "bubble"
            width :         300
        linkedin:
            url:            null
            locale:         "fr_FR"
            counter:        "right"
        pinterest:
            url:            null
    links:
        facebook:           "http://www.facebook.com/yann.chauvel"
        googleplus:         "https://plus.google.com/105931415830389032796"
    theme:                  'default' # optional

# app/config/config.yml

fos_comment:
    db_driver: orm
    class:
        model:
            comment: Esprit\GameBundle\Entity\Comment
            thread: Esprit\GameBundle\Entity\Thread

assetic:
    bundles: [ "EspritGameBundle" ]

fos_message:
    db_driver: orm
    thread_class: MyApp\UserBundle\Entity\Thread
    message_class: MyApp\UserBundle\Entity\Message
fos_message:
    authorizer: app.authorizer
# app/config/config.yml

fos_message:
    db_driver:              orm
    thread_class:           MyApp\UserBundle\Entity\Thread
    message_class:          MyApp\UserBundle\Entity\Message
    message_manager:        fos_message.message_manager         # See ModelManager\MessageManagerInterface
    thread_manager:         fos_message.thread_manager          # See ModelManager\ThreadManagerInterface
    sender:                 fos_message.sender                  # See Sender\SenderInterface
    composer:               fos_message.composer                # See Composer\ComposerInterface
    provider:               fos_message.provider                # See Provider\ProviderInterface
    participant_provider:   fos_message.participant_provider    # See Security\ParticipantProviderInterface
    authorizer:             fos_message.authorizer              # See Security\AuthorizerInterface
    message_reader:         fos_message.message_reader          # See Reader\ReaderInterface
    thread_reader:          fos_message.thread_reader           # See Reader\ReaderInterface
    deleter:                fos_message.deleter                 # See Deleter\DeleterInterface
    spam_detector:          fos_message.noop_spam_detector      # See SpamDetection\SpamDetectorInterface
    twig_extension:         fos_message.twig_extension          # See Twig\Extension\MessageExtension
    user_transformer:       fos_user.user_transformer           # See Symfony\Component\Form\DataTransformerInterface
    search:
        finder:             fos_message.search_finder           # See Finder\FinderInterface
        query_factory:      fos_message.search_query_factory    # See Finder\QueryFactoryInterface
        query_parameter:    'q'                                     # Request query parameter containing the term
    new_thread_form:
        factory:            fos_message.new_thread_form.factory # See FormFactory\NewThreadMessageFormFactory
        type:               FOS\MessageBundle\FormType\NewThreadMessageFormType
        handler:            fos_message.new_thread_form.handler # See FormHandler\NewThreadMessageFormHandler
        name:               message
    reply_form:
        factory:            fos_message.reply_form.factory      # See FormFactory\ReplyMessageFormFactory
        type:               FOS\MessageBundle\FormType\ReplyMessageFormType
        handler:            fos_message.reply_form.handler      # See FormHandler\ReplyMessageFormHandler
        name:               message

liip_imagine :
    resolvers :
        default :
            web_path : ~

    filter_sets :
        cache : ~
        # the name of the "filter set"
        storeThumb :
            # adjust the image quality to 75%
            quality : 80
            # list of transformations to apply (the "filters")
            filters :
                # create a thumbnail: set size to 120x90 and use the "outbound" mode
                # to crop the image when the size ratio of the input differs
                thumbnail  : { size : [142, 200], mode : inset }
                # create a 2px black border: center the thumbnail on a black background
                # 4px larger to create a 2px border around the final image
#                background : { size : [124, 94], position : center, color : '#000000' }
        store :
            # adjust the image quality to 75%
            quality : 75
            # list of transformations to apply (the "filters")
            filters :
                # create a thumbnail: set size to 120x90 and use the "outbound" mode
                # to crop the image when the size ratio of the input differs
                thumbnail  : { size : [270, 410], mode : inset }
                # create a 2px black border: center the thumbnail on a black background
                # 4px larger to create a 2px border around the final image
#                background : { size : [124, 94], position : center, color : '#000000' }